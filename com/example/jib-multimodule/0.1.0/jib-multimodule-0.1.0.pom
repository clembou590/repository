<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Defines artifact information for this parent POM. -->
    <groupId>com.example</groupId>
    <artifactId>jib-multimodule</artifactId>
    <packaging>pom</packaging>
    <version>0.1.0</version>
    <name>Jib Multi-module Example</name>

    <!-- Inherits from the Spring Boot Starter POM. -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <!-- The modules that are part of this project. -->
    <modules>
        <module>name-service</module>
        <module>shared-library</module>
    </modules>

    <!-- Uses Java 8. -->
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <skipGenerationOfGitProperties>false</skipGenerationOfGitProperties>
        <gcp.projectid>${env.PROJECT_ID}</gcp.projectid>
        <UT.skip>false</UT.skip>
        <IT.skip>false</IT.skip>
        <jib.skip>false</jib.skip>
        <github.global.server>github</github.global.server>


    </properties>


    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>


            <!-- this is for unit test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${UT.skip}</skipTests>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- this is for integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <skipTests>${IT.skip}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>

            <!-- Plugin to create a test jar that can be reused by other projects in their test folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- this plugin will check the formatting of the files -->
            <!-- <plugin> -->
            <!-- <groupId>com.coveo</groupId> -->
            <!-- <artifactId>fmt-maven-plugin</artifactId> -->
            <!-- <version>2.10</version> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <goals> -->
            <!-- <goal>check</goal> -->
            <!-- </goals> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->







            <!-- <plugin> -->
            <!-- <groupId>com.google.cloud.tools</groupId> -->
            <!-- <artifactId>jib-maven-plugin</artifactId> -->
            <!-- <version>2.4.0</version> -->
            <!-- <configuration> -->
            <!-- <skip>${jib.skip}</skip> -->

            <!-- <to> -->
            <!-- <image>gcr.io/${gcp.projectid}/${project.groupId}_${project.artifactId}:${git.commit.id.describe}</image> -->
            <!-- </to> -->
            <!-- </configuration> -->

            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <phase>package</phase> -->
            <!-- <goals> -->
            <!-- <goal>build</goal> -->
            <!-- </goals> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->

            <!-- this is to get information about the commit that was used -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipGenerationOfGitProperties}</skip>
                    <skipPoms>false</skipPoms>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <!-- <useNativeGit>true</useNativeGit> -->
                    <offline>true</offline>

                    <excludeProperties>
                        <excludeProperty>git.build.time</excludeProperty>
                    </excludeProperties>

                </configuration>
            </plugin>


            <!-- this is to create the "build-info.properties" file for all rest project -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>

                    <!-- this is a little trick to disable the repackage goal of this plugin: we set the phase to none wich is a none existing phase -->
                    <execution>
                        <id>repackage</id>
                        <phase>none</phase>
                    </execution>


                </executions>

            </plugin>




            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.11</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message> <!-- git commit message -->
                    <noJekyll>true</noJekyll>  <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                    <branch>refs/heads/mvn-repo</branch> <!-- remote branch name -->
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <repositoryName>repository</repositoryName> <!-- github repo name -->
                    <repositoryOwner>clembou590</repositoryOwner> <!-- organization or user name -->
                </configuration>
                <executions> <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>



            <!-- <plugin> -->
            <!-- <groupId>org.codehaus.mojo</groupId> -->
            <!-- <artifactId>build-helper-maven-plugin</artifactId> -->
            <!-- <version>3.2.0</version> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <id>bsh-property</id> -->
            <!-- <goals> -->
            <!-- <goal>bsh-property</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <properties> -->
            <!-- <property>isSnapshot</property> -->
            <!-- <property>isDirty</property> -->
            <!-- </properties> -->
            <!-- <source> -->
            <!-- isSnapshot = project.getVersion().endsWith("-SNAPSHOT") ? true : false; -->
            <!-- isDirty = ${git.dirty}; -->
            <!-- </source> -->
            <!-- </configuration> -->
            <!-- </execution> -->

            <!-- <execution> -->
            <!-- <id>regex-property</id> -->
            <!-- <goals> -->
            <!-- <goal>regex-property</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <name>human.version</name> -->
            <!-- <value>${project.version}</value> -->
            <!-- <regex>-SNAPSHOT</regex> -->
            <!-- <replacement> pre-release development version</replacement> -->
            <!-- <failIfNoMatch>false</failIfNoMatch> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->


            <!-- <plugin> -->
            <!-- <groupId>org.apache.maven.plugins</groupId> -->
            <!-- <artifactId>maven-antrun-plugin</artifactId> -->
            <!-- <version>1.4</version> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <phase>validate</phase> -->
            <!-- <goals> -->
            <!-- <goal>run</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <tasks> -->
            <!-- <echo>Displaying value of 'isSnapshot' property</echo> -->
            <!-- <echo>[isSnapshot]: ${isSnapshot}</echo> -->

            <!-- <echo>Displaying value of 'isDirty' property</echo> -->
            <!-- <echo>[isDirty]: ${isDirty}</echo> -->
            <!-- </tasks> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->


            <!-- <plugin> -->
            <!-- <groupId>org.apache.maven.plugins</groupId> -->
            <!-- <artifactId>maven-enforcer-plugin</artifactId> -->
            <!-- <version>3.0.0-M3</version> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <id>enforce</id> -->
            <!-- <goals> -->
            <!-- <goal>enforce</goal> -->
            <!-- </goals> -->
            <!-- <configuration> -->
            <!-- <rules> -->
            <!-- <AlwaysFail /> -->
            <!-- </rules> -->
            <!-- <fail>false</fail> -->
            <!-- </configuration> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->




        </plugins>

    </build>

    <!-- Defines dependencies common to all modules. -->
    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- <dependency> -->
        <!-- <groupId>org.springframework.boot</groupId> -->
        <!-- <artifactId>spring-boot-starter-security</artifactId> -->
        <!-- </dependency> -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.12</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- <dependency> -->
        <!-- <groupId>org.springframework.security</groupId> -->
        <!-- <artifactId>spring-security-test</artifactId> -->
        <!-- <scope>test</scope> -->
        <!-- </dependency> -->

        <!-- swagger/open api -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.3.9</version>
        </dependency>

    </dependencies>
</project>
